// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

/// @title MyNFT - A simple ERC-721 NFT contract
/// @notice Allows the owner to mint NFTs with metadata URIs
contract MyNFT is ERC721URIStorage, Ownable {
    uint256 private _tokenIds;

    constructor() ERC721("MyNFT Collection", "MNFT") {}

    /// @notice Mint a new NFT to the caller's wallet
    /// @param tokenURI The metadata URI (e.g. IPFS link) of the NFT
    /// @return tokenId The ID of the newly minted NFT
    function mintNFT(string memory tokenURI) public onlyOwner returns (uint256) {
        _tokenIds++;
        uint256 newItemId = _tokenIds;

        _mint(msg.sender, newItemId);
        _setTokenURI(newItemId, tokenURI);

        return newItemId;
    }
}
git add contracts/MyNFT.sol
git commit -m "Add basic ERC-721 smart contract for NFT minting"
